@model WebApplication4.Models.RegisterViewModel
@{
    ViewBag.Title = "Register";
}
<h2>@ViewBag.Title.</h2>

            @using (Html.BeginForm("Register", "Account", FormMethod.Post, new { @id = "register", @class = "form-horizontal", role = "form" }))
            {
                @Html.AntiForgeryToken()
                <h4>Create a new account.</h4>
                <hr />
                @Html.ValidationSummary("", new { @class = "text-danger" })
                <div class="form-group">
                    @Html.LabelFor(m => m.Email, new { @class = "col-md-2 control-label" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(m => m.Email, new { @class = "form-control" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.Password, new { @class = "col-md-2 control-label" })
                    <div class="col-md-10">
                        @Html.PasswordFor(m => m.Password, new { @class = "form-control" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.ConfirmPassword, new { @class = "col-md-2 control-label" })
                    <div class="col-md-10">
                        @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control" })
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" class="btn btn-default" value="Register" />
                    </div>
                </div>
            }
           
    <script>
        $(document).ready(function () {
            $('#register').validate({
                errorClass: 'help-block animation-slideDown',
                errorElement: 'div',
                errorPlacement: function (error, e) {
                    e.parents('.form-group > div').append(error);
                },
                highlight: function (e) {

                    $(e).closest('.form-group').removeClass('has-success has-error').addClass('has-error');
                    $(e).closest('.help-block').remove();
                },
                success: function (e) {
                    e.closest('.form-group').removeClass('has-success has-error');
                    e.closest('.help-block').remove();
                },
                rules: {
                    'Email': {
                        required: true,
                        email: true
                    },

                    'Password': {
                        required: true,
                        minlength: 6
                    },

                    'ConfirmPassword': {
                        required: true,
                        equalTo: '#Password'
                    }
                },
                messages: {
                    'Email': 'Please enter valid email address',

                    'Password': {
                        required: 'Please provide a password',
                        minlength: 'Your password must be at least 6 characters long'
                    },

                    'ConfirmPassword': {
                        required: 'Please provide a password',
                        minlength: 'Your password must be at least 6 characters long',
                        equalTo: 'Please enter the same password as above'
                    }
                }
            });
        });
    </script>
    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
        @Scripts.Render("~/bundles/custom-validator")
    }
